//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FRTools.Discord {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FRTools.Discord.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/gCgsBjr.png.
        /// </summary>
        internal static string DominanceCurrent_0 {
            get {
                return ResourceManager.GetString("DominanceCurrent_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Posts the current state of dominance into the chat. This data is cached with a 5 minute lifespan.
        ///&lt;br&gt;&lt;br&gt;
        ///{0}.
        /// </summary>
        internal static string DominanceCurrentDetailed {
            get {
                return ResourceManager.GetString("DominanceCurrentDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/WZYZvob.png.
        /// </summary>
        internal static string DominanceDisable_0 {
            get {
                return ResourceManager.GetString("DominanceDisable_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command turns the automatic role assignment off. You&apos;ll need to use the &lt;kbd&gt;dom enable&lt;/kbd&gt; command to manually turn it back on.
        ///&lt;br&gt;&lt;br&gt;
        ///{0}.
        /// </summary>
        internal static string DominanceDisableDetailed {
            get {
                return ResourceManager.GetString("DominanceDisableDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string DominanceDisableSynopsis {
            get {
                return ResourceManager.GetString("DominanceDisableSynopsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/nbEfsQ3.png.
        /// </summary>
        internal static string DominanceEnable_0 {
            get {
                return ResourceManager.GetString("DominanceEnable_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command turns the automatic role assignment on. After you finish the setup, auto assignment is on by default, so you only really use this command if you have manually disabled the assignment with the &lt;kbd&gt;dom disable&lt;/kbd&gt; command.
        ///&lt;br&gt;&lt;br&gt;
        ///You can only use this command after &lt;kbd&gt;dom setup&lt;/kbd&gt;, otherwise it won&apos;t know all the roles needed and throw an error.
        ///&lt;br&gt;&lt;br&gt;
        ///{0}.
        /// </summary>
        internal static string DominanceEnableDetailed {
            get {
                return ResourceManager.GetString("DominanceEnableDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string DominanceEnableSynopsis {
            get {
                return ResourceManager.GetString("DominanceEnableSynopsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here you can find detailed help on every command used to set up the automatic dominance role, as well as settings for each of them and how to use this system..
        /// </summary>
        internal static string DominanceModuleDetailed {
            get {
                return ResourceManager.GetString("DominanceModuleDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAgZ3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZxZclw5cEX/sQovAfOwHIwR3oGX73NRVeIgUi21/GFHuBUiqeIrPLxE5h0SqDb7v/7zmP/gv2ZLNDGVmlvOlv9ii813fqj28d/ju7Pxfn39555fP7xufvzo+R74Hh6/yPv5rs7r6e0NJT5fHx9fN2U+fvD1OdDrzs8Bg+7s+eF5XX0OFPzjdff8t2nP9/X47nGef8/099dpPH71+d+xEIyVGC9443dwwfK16i7h8bfz1/HVB+c/vhJC/jp25rvgfRc725+vh4+hMDY/L8ifYvR83aWvY3cj9H5G7u3OH36Rpvf2/X/vY3dWPWc/nq7HTKSyeT7U61HuT1xIOGO4b8v8KfxN/Fzun8afyiNOVmyxmoM/07jmPNE+Lrrlujtu3+/TTaYY/faF795P4q7Xaii++XlDH/XHHV9CC8uE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DominanceModuleIcon {
            get {
                return ResourceManager.GetString("DominanceModuleIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dominance setup and configuration.
        /// </summary>
        internal static string DominanceModuleSynopsis {
            get {
                return ResourceManager.GetString("DominanceModuleSynopsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/3KhT7Nb.png.
        /// </summary>
        internal static string DominanceOptIn_0 {
            get {
                return ResourceManager.GetString("DominanceOptIn_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/yc4L0Le.png.
        /// </summary>
        internal static string DominanceOptIn_1 {
            get {
                return ResourceManager.GetString("DominanceOptIn_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this command to sign yourself up to receive the automatic dominance role. If your flight gets discounts this week, you&apos;ll get the appropriate discount role people can ping. Additionally, using this command will also immediately grant you the discount role if your flight has dominance. To stop receiving the role, you can use the &lt;kbd&gt;dom optout&lt;/kbd&gt; command.
        ///&lt;br&gt;&lt;br&gt;
        ///Example of usage:
        ///&lt;br&gt;&lt;br&gt;
        ///{0}
        ///&lt;br&gt;
        ///User profile with roles applied:
        ///&lt;br&gt;&lt;br&gt;
        ///{1}.
        /// </summary>
        internal static string DominanceOptInDetailed {
            get {
                return ResourceManager.GetString("DominanceOptInDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string DominanceOptInSynopsis {
            get {
                return ResourceManager.GetString("DominanceOptInSynopsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/CzJGuZQ.png.
        /// </summary>
        internal static string DominanceOptOut_0 {
            get {
                return ResourceManager.GetString("DominanceOptOut_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this command to sign yourself out of receiving the dominance role. You won&apos;t be automatically assigned the discount role anymore, even if your flight receives dominance, unless you sign up using &lt;kbd&gt;dom optin&lt;/kbd&gt; again. Additionally, using this command will also immediately remove your dominance role if you have it.
        ///&lt;br&gt;&lt;br&gt;
        ///{0}.
        /// </summary>
        internal static string DominanceOptOutDetailed {
            get {
                return ResourceManager.GetString("DominanceOptOutDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string DominanceOptOutSynopsis {
            get {
                return ResourceManager.GetString("DominanceOptOutSynopsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/AZrotn7.png.
        /// </summary>
        internal static string DominanceSetup_0 {
            get {
                return ResourceManager.GetString("DominanceSetup_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command is used to set up the entire dominance module in one go. You can set up each individual role using the website as well if you do not want to use this wizard.
        ///&lt;br&gt;&lt;br&gt;
        ///After executing the command in DIscord, you will be presented with a setup message from the bot which tells you what to do on each step. First, you set which role you want to use as the dominance discount role, and then you assign a role to each flight.
        ///&lt;br&gt;&lt;br&gt;
        ///There are multiple ways to provide the roles to the bot:
        ///&lt;br&gt;&lt;br [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DominanceSetupDetailed {
            get {
                return ResourceManager.GetString("DominanceSetupDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to where the fresh hell does this show up.
        /// </summary>
        internal static string DominanceSetupSynopsis {
            get {
                return ResourceManager.GetString("DominanceSetupSynopsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/UBmEsdh.png.
        /// </summary>
        internal static string DominanceUpdate_0 {
            get {
                return ResourceManager.GetString("DominanceUpdate_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using this command starts a manual update of the dominance status. The bot will find what flight is dominating and update the roles accordingly.
        ///&lt;br&gt;&lt;br&gt;
        ///You should only use this command if:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;ul&gt;
        ///&lt;li&gt; If anyone&apos;s changed flight roles and you&apos;d like them to update. Currently, the dominance role is not automatically applied/removed when people change the assigned flight roles.
        ///&lt;li&gt; If, for some reason, the bot doesn&apos;t update roles after dominance rolls over. This might happen due to circumstanc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DominanceUpdateDetailed {
            get {
                return ResourceManager.GetString("DominanceUpdateDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string DominanceUpdateSynopsis {
            get {
                return ResourceManager.GetString("DominanceUpdateSynopsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/GWOdaii.png.
        /// </summary>
        internal static string LookupDragon_0 {
            get {
                return ResourceManager.GetString("LookupDragon_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command allows you to look up a specific dragons information using its ID number. The bot will post an embed containing its name, breed, level, age and a link to the dragon on FR, an image of the dragon in question, its colors &amp; genes, eye type and element, hatchdate, ID, parents and offspring. The image is clickable so you can see the bigger, original size.
        ///&lt;br&gt;&lt;br&gt;
        ///{0}.
        /// </summary>
        internal static string LookupDragonDetailed {
            get {
                return ResourceManager.GetString("LookupDragonDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this command you can search, or directly view, any item currently available in Flight Rising. You can either supply (part of) the item&apos;s name or description, or it&apos;s item id. The data you receive is not as detailed as the in-game database, as such every result will have a link to the in-game database..
        /// </summary>
        internal static string LookupItemInfoDetailed {
            get {
                return ResourceManager.GetString("LookupItemInfoDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This module allows you to quickly look up FR related things, without having to leave Discord to check them..
        /// </summary>
        internal static string LookupModuleDetailed {
            get {
                return ResourceManager.GetString("LookupModuleDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAESFJREFUeNrsnc2OI1cVgGtGYREQcgdEQJGQHRAiIEbtkCDBhq5hByzaI7Km3exYjaNILNiMZ4eQAOcJxv0EuMUDjL1FSNNWlixwP0HaG1gO97iPM07H5b97btWtqu+TSt2apMvlqjrfPef+VN17+fJlAgD15D6nAAABAAACAAAEAAAIAAAQAAAgAABAAACAAAAAAQAAAgAABAAACAAAEAAAIAAAQAAAgAAAAAEAAAIAAAQAAIXwGqfAlgft94/cj/bKP8nvRxv+ZLzy+9UnV/+64SxCXtzjqcAHB3rqfrR0SzXIj412f+22mQhh+dOJYcxZBwRQXKuermzHBR3KVDMGEcPYSWHG1QEEECboJXXv6HYc6WEuhTB0MrjiqgEC8At6 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LookupModuleIcon {
            get {
                return ResourceManager.GetString("LookupModuleIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lookup data from Flight Rising.
        /// </summary>
        internal static string LookupModuleSynopsis {
            get {
                return ResourceManager.GetString("LookupModuleSynopsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this command you can search for skins uploaded to the FRTools website. The fields searched are:
        ///&lt;ul&gt;
        ///&lt;li&gt;Skin title&lt;/li&gt;
        ///&lt;li&gt;Skin description&lt;/li&gt;
        ///&lt;li&gt;Site username of creator&lt;/li&gt;
        ///&lt;li&gt;FR username of creator (if linked)&lt;/li&gt;
        ///&lt;/ul&gt;.
        /// </summary>
        internal static string SkinTesterLookupDetailed {
            get {
                return ResourceManager.GetString("SkinTesterLookupDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This module allows you to look up skins uploaded on FRTools and preview them on dragons..
        /// </summary>
        internal static string SkinTesterModuleDetailed {
            get {
                return ResourceManager.GetString("SkinTesterModuleDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAALiIAAC4iAari3ZIAAAAHdElNRQfjCxoALg+PyFHbAAAAGHRFWHRTb2Z0d2FyZQBwYWludC5uZXQgNC4xLjb9TgnoAAAli0lEQVR4Xu2dCXhU5b3/xWq1td7We73t7fLovf3712uWSTITEBCMKArKJpBJAoQdkpkEEsKqiASVvYqiSGZCIBAykzkTsp+ZJAQI+44gIosoto9tvW2t7W2tIpmZc39vOLEheRNmObPm+3mez4NCZsk5v9+7n/e9BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwBcK [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SkinTesterModuleIcon {
            get {
                return ResourceManager.GetString("SkinTesterModuleIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skin Tester skins and previews in Discord.
        /// </summary>
        internal static string SkinTesterModuleSynopsis {
            get {
                return ResourceManager.GetString("SkinTesterModuleSynopsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/b8emHpT.png.
        /// </summary>
        internal static string SkinTesterPreview_0 {
            get {
                return ResourceManager.GetString("SkinTesterPreview_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/hlc1oWH.png.
        /// </summary>
        internal static string SkinTesterPreview_1 {
            get {
                return ResourceManager.GetString("SkinTesterPreview_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to preview your requested skin on a dragon of your choice. You can supply:
        ///&lt;br&gt;&lt;br&gt;
        ///&lt;ul&gt;
        ///&lt;li&gt;an existing dragon ID
        ///&lt;li&gt;a scry image URL
        ///&lt;li&gt;a dressing room image URL
        ///&lt;/ul&gt;
        ///&lt;br&gt;
        ///You can swap the gender of your dragon by adding &lt;kbd&gt;-s&lt;/kbd&gt; at the end of your command. This only works when previewing on an existing dragon using it&apos;s ID.&lt;br&gt;
        ///Morphologies also work, both from the scrying workshop and the dressing room. By default all images shown don&apos;t include apparel (if available), if you  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SkinTesterPreviewDetailed {
            get {
                return ResourceManager.GetString("SkinTesterPreviewDetailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://i.imgur.com/V4REa2B.png.
        /// </summary>
        internal static string SkinTesterView_0 {
            get {
                return ResourceManager.GetString("SkinTesterView_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command just shows you the requested skin on a mannequin, along with the creators name (Anonymous if there&apos;s no account made), its name, a link to it on FRTools and its description.
        ///&lt;br&gt;&lt;br&gt;
        ///{0}.
        /// </summary>
        internal static string SkinTesterViewDetailed {
            get {
                return ResourceManager.GetString("SkinTesterViewDetailed", resourceCulture);
            }
        }
    }
}
